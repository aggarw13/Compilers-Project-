// Generated from Micro.g4 by ANTLR 4.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class MicroLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__30=1, T__29=2, T__28=3, T__27=4, T__26=5, T__25=6, T__24=7, T__23=8, 
		T__22=9, T__21=10, T__20=11, T__19=12, T__18=13, T__17=14, T__16=15, T__15=16, 
		T__14=17, T__13=18, T__12=19, T__11=20, T__10=21, T__9=22, T__8=23, T__7=24, 
		T__6=25, T__5=26, T__4=27, T__3=28, T__2=29, T__1=30, T__0=31, PROGRAM=32, 
		KEYWORD=33, IDENTIFIER=34, INTLITERAL=35, STRINGLITERAL=36, FLOATLITERAL=37, 
		COMMENT=38, WHITESPACES=39, OPERATOR=40;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"','", "'*'", "'-'", "'('", "'<'", "'READ'", "'END'", "'!='", "'<='", 
		"'ELSE'", "'ENDIF'", "'VOID'", "'STRING'", "'IF'", "'FOR'", "'WRITE'", 
		"')'", "'+'", "'WHILE'", "'='", "';'", "'FUNCTION'", "'>'", "'FLOAT'", 
		"':='", "'RETURN'", "'/'", "'BEGIN'", "'>='", "'INT'", "'ENDWHILE'", "'PROGRAM'", 
		"KEYWORD", "IDENTIFIER", "INTLITERAL", "STRINGLITERAL", "FLOATLITERAL", 
		"COMMENT", "WHITESPACES", "OPERATOR"
	};
	public static final String[] ruleNames = {
		"T__30", "T__29", "T__28", "T__27", "T__26", "T__25", "T__24", "T__23", 
		"T__22", "T__21", "T__20", "T__19", "T__18", "T__17", "T__16", "T__15", 
		"T__14", "T__13", "T__12", "T__11", "T__10", "T__9", "T__8", "T__7", "T__6", 
		"T__5", "T__4", "T__3", "T__2", "T__1", "T__0", "DIGIT", "LETTER", "PROGRAM", 
		"KEYWORD", "IDENTIFIER", "INTLITERAL", "STRINGLITERAL", "FLOATLITERAL", 
		"COMMENT", "WHITESPACES", "OPERATOR"
	};


	public MicroLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Micro.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 39: COMMENT_action((RuleContext)_localctx, actionIndex); break;

		case 40: WHITESPACES_action((RuleContext)_localctx, actionIndex); break;
		}
	}
	private void WHITESPACES_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 1: skip();  break;
		}
	}
	private void COMMENT_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: skip();  break;
		}
	}

	public static final String _serializedATN =
		"\3\uacf5\uee8c\u4f5d\u8b0d\u4a45\u78bd\u1b2f\u3378\2*\u017b\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\3"+
		"\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b"+
		"\3\b\3\t\3\t\3\t\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f"+
		"\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3"+
		"\17\3\17\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3"+
		"\23\3\23\3\24\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\26\3\26\3\27\3\27\3"+
		"\27\3\27\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\31\3\31\3\31\3\31\3\31\3"+
		"\31\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\35\3"+
		"\35\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3 \3 \3 \3"+
		" \3 \3 \3 \3 \3 \3!\3!\3\"\3\"\3#\3#\3#\3#\3#\3#\3#\3#\3$\3$\3$\3$\3$"+
		"\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$"+
		"\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$"+
		"\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$"+
		"\3$\3$\3$\3$\3$\3$\3$\3$\3$\5$\u0135\n$\3%\3%\3%\7%\u013a\n%\f%\16%\u013d"+
		"\13%\3&\6&\u0140\n&\r&\16&\u0141\3\'\3\'\7\'\u0146\n\'\f\'\16\'\u0149"+
		"\13\'\3\'\3\'\3(\7(\u014e\n(\f(\16(\u0151\13(\3(\3(\6(\u0155\n(\r(\16"+
		"(\u0156\3)\3)\3)\3)\7)\u015d\n)\f)\16)\u0160\13)\3)\3)\3)\5)\u0165\n)"+
		"\3)\3)\3*\6*\u016a\n*\r*\16*\u016b\3*\3*\3+\3+\3+\3+\3+\3+\3+\3+\3+\3"+
		"+\5+\u017a\n+\3\u015e,\3\3\1\5\4\1\7\5\1\t\6\1\13\7\1\r\b\1\17\t\1\21"+
		"\n\1\23\13\1\25\f\1\27\r\1\31\16\1\33\17\1\35\20\1\37\21\1!\22\1#\23\1"+
		"%\24\1\'\25\1)\26\1+\27\1-\30\1/\31\1\61\32\1\63\33\1\65\34\1\67\35\1"+
		"9\36\1;\37\1= \1?!\1A\2\1C\2\1E\"\1G#\1I$\1K%\1M&\1O\'\1Q(\2S)\3U*\1\3"+
		"\2\7\4\2C\\c|\3\2$$\5\2\13\f\17\17\"\"\6\2,-//\61\61>@\5\2*+..==\u0197"+
		"\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2"+
		"\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2"+
		"\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2"+
		"\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2"+
		"\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3"+
		"\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2"+
		"\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\3W\3\2\2\2\5"+
		"Y\3\2\2\2\7[\3\2\2\2\t]\3\2\2\2\13_\3\2\2\2\ra\3\2\2\2\17f\3\2\2\2\21"+
		"j\3\2\2\2\23m\3\2\2\2\25p\3\2\2\2\27u\3\2\2\2\31{\3\2\2\2\33\u0080\3\2"+
		"\2\2\35\u0087\3\2\2\2\37\u008a\3\2\2\2!\u008e\3\2\2\2#\u0094\3\2\2\2%"+
		"\u0096\3\2\2\2\'\u0098\3\2\2\2)\u009e\3\2\2\2+\u00a0\3\2\2\2-\u00a2\3"+
		"\2\2\2/\u00ab\3\2\2\2\61\u00ad\3\2\2\2\63\u00b3\3\2\2\2\65\u00b6\3\2\2"+
		"\2\67\u00bd\3\2\2\29\u00bf\3\2\2\2;\u00c5\3\2\2\2=\u00c8\3\2\2\2?\u00cc"+
		"\3\2\2\2A\u00d5\3\2\2\2C\u00d7\3\2\2\2E\u00d9\3\2\2\2G\u0134\3\2\2\2I"+
		"\u0136\3\2\2\2K\u013f\3\2\2\2M\u0143\3\2\2\2O\u014f\3\2\2\2Q\u0158\3\2"+
		"\2\2S\u0169\3\2\2\2U\u0179\3\2\2\2WX\7.\2\2X\4\3\2\2\2YZ\7,\2\2Z\6\3\2"+
		"\2\2[\\\7/\2\2\\\b\3\2\2\2]^\7*\2\2^\n\3\2\2\2_`\7>\2\2`\f\3\2\2\2ab\7"+
		"T\2\2bc\7G\2\2cd\7C\2\2de\7F\2\2e\16\3\2\2\2fg\7G\2\2gh\7P\2\2hi\7F\2"+
		"\2i\20\3\2\2\2jk\7#\2\2kl\7?\2\2l\22\3\2\2\2mn\7>\2\2no\7?\2\2o\24\3\2"+
		"\2\2pq\7G\2\2qr\7N\2\2rs\7U\2\2st\7G\2\2t\26\3\2\2\2uv\7G\2\2vw\7P\2\2"+
		"wx\7F\2\2xy\7K\2\2yz\7H\2\2z\30\3\2\2\2{|\7X\2\2|}\7Q\2\2}~\7K\2\2~\177"+
		"\7F\2\2\177\32\3\2\2\2\u0080\u0081\7U\2\2\u0081\u0082\7V\2\2\u0082\u0083"+
		"\7T\2\2\u0083\u0084\7K\2\2\u0084\u0085\7P\2\2\u0085\u0086\7I\2\2\u0086"+
		"\34\3\2\2\2\u0087\u0088\7K\2\2\u0088\u0089\7H\2\2\u0089\36\3\2\2\2\u008a"+
		"\u008b\7H\2\2\u008b\u008c\7Q\2\2\u008c\u008d\7T\2\2\u008d \3\2\2\2\u008e"+
		"\u008f\7Y\2\2\u008f\u0090\7T\2\2\u0090\u0091\7K\2\2\u0091\u0092\7V\2\2"+
		"\u0092\u0093\7G\2\2\u0093\"\3\2\2\2\u0094\u0095\7+\2\2\u0095$\3\2\2\2"+
		"\u0096\u0097\7-\2\2\u0097&\3\2\2\2\u0098\u0099\7Y\2\2\u0099\u009a\7J\2"+
		"\2\u009a\u009b\7K\2\2\u009b\u009c\7N\2\2\u009c\u009d\7G\2\2\u009d(\3\2"+
		"\2\2\u009e\u009f\7?\2\2\u009f*\3\2\2\2\u00a0\u00a1\7=\2\2\u00a1,\3\2\2"+
		"\2\u00a2\u00a3\7H\2\2\u00a3\u00a4\7W\2\2\u00a4\u00a5\7P\2\2\u00a5\u00a6"+
		"\7E\2\2\u00a6\u00a7\7V\2\2\u00a7\u00a8\7K\2\2\u00a8\u00a9\7Q\2\2\u00a9"+
		"\u00aa\7P\2\2\u00aa.\3\2\2\2\u00ab\u00ac\7@\2\2\u00ac\60\3\2\2\2\u00ad"+
		"\u00ae\7H\2\2\u00ae\u00af\7N\2\2\u00af\u00b0\7Q\2\2\u00b0\u00b1\7C\2\2"+
		"\u00b1\u00b2\7V\2\2\u00b2\62\3\2\2\2\u00b3\u00b4\7<\2\2\u00b4\u00b5\7"+
		"?\2\2\u00b5\64\3\2\2\2\u00b6\u00b7\7T\2\2\u00b7\u00b8\7G\2\2\u00b8\u00b9"+
		"\7V\2\2\u00b9\u00ba\7W\2\2\u00ba\u00bb\7T\2\2\u00bb\u00bc\7P\2\2\u00bc"+
		"\66\3\2\2\2\u00bd\u00be\7\61\2\2\u00be8\3\2\2\2\u00bf\u00c0\7D\2\2\u00c0"+
		"\u00c1\7G\2\2\u00c1\u00c2\7I\2\2\u00c2\u00c3\7K\2\2\u00c3\u00c4\7P\2\2"+
		"\u00c4:\3\2\2\2\u00c5\u00c6\7@\2\2\u00c6\u00c7\7?\2\2\u00c7<\3\2\2\2\u00c8"+
		"\u00c9\7K\2\2\u00c9\u00ca\7P\2\2\u00ca\u00cb\7V\2\2\u00cb>\3\2\2\2\u00cc"+
		"\u00cd\7G\2\2\u00cd\u00ce\7P\2\2\u00ce\u00cf\7F\2\2\u00cf\u00d0\7Y\2\2"+
		"\u00d0\u00d1\7J\2\2\u00d1\u00d2\7K\2\2\u00d2\u00d3\7N\2\2\u00d3\u00d4"+
		"\7G\2\2\u00d4@\3\2\2\2\u00d5\u00d6\4\62;\2\u00d6B\3\2\2\2\u00d7\u00d8"+
		"\t\2\2\2\u00d8D\3\2\2\2\u00d9\u00da\7R\2\2\u00da\u00db\7T\2\2\u00db\u00dc"+
		"\7Q\2\2\u00dc\u00dd\7I\2\2\u00dd\u00de\7T\2\2\u00de\u00df\7C\2\2\u00df"+
		"\u00e0\7O\2\2\u00e0F\3\2\2\2\u00e1\u00e2\7R\2\2\u00e2\u00e3\7T\2\2\u00e3"+
		"\u00e4\7Q\2\2\u00e4\u00e5\7I\2\2\u00e5\u00e6\7T\2\2\u00e6\u00e7\7C\2\2"+
		"\u00e7\u0135\7O\2\2\u00e8\u00e9\7D\2\2\u00e9\u00ea\7G\2\2\u00ea\u00eb"+
		"\7I\2\2\u00eb\u00ec\7K\2\2\u00ec\u0135\7P\2\2\u00ed\u00ee\7G\2\2\u00ee"+
		"\u00ef\7P\2\2\u00ef\u0135\7F\2\2\u00f0\u00f1\7K\2\2\u00f1\u00f2\7P\2\2"+
		"\u00f2\u0135\7V\2\2\u00f3\u00f4\7H\2\2\u00f4\u00f5\7N\2\2\u00f5\u00f6"+
		"\7Q\2\2\u00f6\u00f7\7C\2\2\u00f7\u0135\7V\2\2\u00f8\u00f9\7U\2\2\u00f9"+
		"\u00fa\7V\2\2\u00fa\u00fb\7T\2\2\u00fb\u00fc\7K\2\2\u00fc\u00fd\7P\2\2"+
		"\u00fd\u0135\7I\2\2\u00fe\u00ff\7H\2\2\u00ff\u0100\7Q\2\2\u0100\u0135"+
		"\7T\2\2\u0101\u0102\7T\2\2\u0102\u0103\7Q\2\2\u0103\u0135\7H\2\2\u0104"+
		"\u0105\7Y\2\2\u0105\u0106\7T\2\2\u0106\u0107\7K\2\2\u0107\u0108\7V\2\2"+
		"\u0108\u0135\7G\2\2\u0109\u010a\7T\2\2\u010a\u010b\7G\2\2\u010b\u010c"+
		"\7C\2\2\u010c\u0135\7F\2\2\u010d\u010e\7H\2\2\u010e\u010f\7W\2\2\u010f"+
		"\u0110\7P\2\2\u0110\u0111\7E\2\2\u0111\u0112\7V\2\2\u0112\u0113\7K\2\2"+
		"\u0113\u0114\7Q\2\2\u0114\u0135\7P\2\2\u0115\u0116\7X\2\2\u0116\u0117"+
		"\7Q\2\2\u0117\u0118\7K\2\2\u0118\u0135\7F\2\2\u0119\u011a\7K\2\2\u011a"+
		"\u0135\7H\2\2\u011b\u011c\7G\2\2\u011c\u011d\7N\2\2\u011d\u011e\7U\2\2"+
		"\u011e\u0135\7G\2\2\u011f\u0120\7H\2\2\u0120\u0135\7K\2\2\u0121\u0122"+
		"\7E\2\2\u0122\u0123\7Q\2\2\u0123\u0124\7P\2\2\u0124\u0125\7V\2\2\u0125"+
		"\u0126\7K\2\2\u0126\u0127\7P\2\2\u0127\u0128\7W\2\2\u0128\u0135\7G\2\2"+
		"\u0129\u012a\7D\2\2\u012a\u012b\7T\2\2\u012b\u012c\7G\2\2\u012c\u012d"+
		"\7C\2\2\u012d\u0135\7M\2\2\u012e\u012f\7T\2\2\u012f\u0130\7G\2\2\u0130"+
		"\u0131\7V\2\2\u0131\u0132\7W\2\2\u0132\u0133\7T\2\2\u0133\u0135\7P\2\2"+
		"\u0134\u00e1\3\2\2\2\u0134\u00e8\3\2\2\2\u0134\u00ed\3\2\2\2\u0134\u00f0"+
		"\3\2\2\2\u0134\u00f3\3\2\2\2\u0134\u00f8\3\2\2\2\u0134\u00fe\3\2\2\2\u0134"+
		"\u0101\3\2\2\2\u0134\u0104\3\2\2\2\u0134\u0109\3\2\2\2\u0134\u010d\3\2"+
		"\2\2\u0134\u0115\3\2\2\2\u0134\u0119\3\2\2\2\u0134\u011b\3\2\2\2\u0134"+
		"\u011f\3\2\2\2\u0134\u0121\3\2\2\2\u0134\u0129\3\2\2\2\u0134\u012e\3\2"+
		"\2\2\u0135H\3\2\2\2\u0136\u013b\5C\"\2\u0137\u013a\5C\"\2\u0138\u013a"+
		"\5A!\2\u0139\u0137\3\2\2\2\u0139\u0138\3\2\2\2\u013a\u013d\3\2\2\2\u013b"+
		"\u0139\3\2\2\2\u013b\u013c\3\2\2\2\u013cJ\3\2\2\2\u013d\u013b\3\2\2\2"+
		"\u013e\u0140\5A!\2\u013f\u013e\3\2\2\2\u0140\u0141\3\2\2\2\u0141\u013f"+
		"\3\2\2\2\u0141\u0142\3\2\2\2\u0142L\3\2\2\2\u0143\u0147\7$\2\2\u0144\u0146"+
		"\n\3\2\2\u0145\u0144\3\2\2\2\u0146\u0149\3\2\2\2\u0147\u0145\3\2\2\2\u0147"+
		"\u0148\3\2\2\2\u0148\u014a\3\2\2\2\u0149\u0147\3\2\2\2\u014a\u014b\7$"+
		"\2\2\u014bN\3\2\2\2\u014c\u014e\5A!\2\u014d\u014c\3\2\2\2\u014e\u0151"+
		"\3\2\2\2\u014f\u014d\3\2\2\2\u014f\u0150\3\2\2\2\u0150\u0152\3\2\2\2\u0151"+
		"\u014f\3\2\2\2\u0152\u0154\7\60\2\2\u0153\u0155\5A!\2\u0154\u0153\3\2"+
		"\2\2\u0155\u0156\3\2\2\2\u0156\u0154\3\2\2\2\u0156\u0157\3\2\2\2\u0157"+
		"P\3\2\2\2\u0158\u0159\7/\2\2\u0159\u015a\7/\2\2\u015a\u015e\3\2\2\2\u015b"+
		"\u015d\13\2\2\2\u015c\u015b\3\2\2\2\u015d\u0160\3\2\2\2\u015e\u015f\3"+
		"\2\2\2\u015e\u015c\3\2\2\2\u015f\u0164\3\2\2\2\u0160\u015e\3\2\2\2\u0161"+
		"\u0165\7\f\2\2\u0162\u0163\7\17\2\2\u0163\u0165\7\f\2\2\u0164\u0161\3"+
		"\2\2\2\u0164\u0162\3\2\2\2\u0165\u0166\3\2\2\2\u0166\u0167\b)\2\2\u0167"+
		"R\3\2\2\2\u0168\u016a\t\4\2\2\u0169\u0168\3\2\2\2\u016a\u016b\3\2\2\2"+
		"\u016b\u0169\3\2\2\2\u016b\u016c\3\2\2\2\u016c\u016d\3\2\2\2\u016d\u016e"+
		"\b*\3\2\u016eT\3\2\2\2\u016f\u017a\t\5\2\2\u0170\u0171\7#\2\2\u0171\u017a"+
		"\7?\2\2\u0172\u0173\7>\2\2\u0173\u017a\7?\2\2\u0174\u0175\7@\2\2\u0175"+
		"\u017a\7?\2\2\u0176\u0177\7<\2\2\u0177\u017a\7?\2\2\u0178\u017a\t\6\2"+
		"\2\u0179\u016f\3\2\2\2\u0179\u0170\3\2\2\2\u0179\u0172\3\2\2\2\u0179\u0174"+
		"\3\2\2\2\u0179\u0176\3\2\2\2\u0179\u0178\3\2\2\2\u017aV\3\2\2\2\16\2\u0134"+
		"\u0139\u013b\u0141\u0147\u014f\u0156\u015e\u0164\u016b\u0179";
	public static final ATN _ATN =
		ATNSimulator.deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}